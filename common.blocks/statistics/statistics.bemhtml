block('statistics')(content()(function(){
			var _custom = this.ctx.uData.custom;
			var _user = this.ctx.uData.user;
			var _stat = _custom.statistic;
			var _dates = _stat ? _stat.visits : null;
			var _dir = this.ctx.appData;
			var _messages = this.ctx.appData.messages;
			var _visitTypes = _messages ? _messages.visitStatistic : null;
			var _visitsStat = {};
			var _visits = [];
			var _now = new Date;
			var _dayBefore = _now.getTime() - 86400000;
			var _monthBefore = _now.setMonth(_now.getMonth - 1);


			var _refPaymentModel = {
				dataLayer: 'user',
				type: 'info',
				provider: 'refPayment',
				messages: 'pay',
				customData: true,
				fileds: {
					status: {
					  type: 'status',
					  extra : {
					  	messageSource : 'messages.status.refPayment'
					  }
					},
					amount: {
					  type: 'cost'
					},
					transactionId: {
					  type: false
					},
					payDate: {
					  type: 'date-in-ms'
					}
				}
			};
			
			function atomizer(itemLayout, itemData, wrapper) {
				var _atom = {
			    	block : 'atom',
			    	mods : {}
			    };

			    if (!itemData) {
					return wrapper ? wrapper : ''
			    }

			    var _wrapper = typeof wrapper === 'object' ? Object.create(wrapper) : null;

			    if (itemLayout && itemLayout.type) {
			    	_atom.content = itemData;
			    	_atom.mods[itemLayout.type] = true;

			    	if (_wrapper) {
			    		_wrapper.content = _atom;

			    		return _wrapper;
			    	} else {
			    		return _atom;
			    	}
			    } else {
			    	if (_wrapper) {
			    		_wrapper.content = itemData;

			    		return _wrapper;
			    	} else {
			    		return itemData;
			    	}
			    }
		    }

			_dates && _dates.forEach(function(date){
				if(date > _dayBefore) {
					_visitsStat.todayVisits || (_visitsStat.todayVisits = 0);
					_visitsStat.todayVisits += 1;
				}

				if(date > _monthBefore) {
					_visitsStat.thisMonthVisits || (_visitsStat.thisMonthVisits = 0);
					_visitsStat.thisMonthVisits += 1;
				}
			});

			_dates && (_visitsStat.totalVisits = _dates.length);
			_dates && _dates.length > 0 && (_visitsStat.lastVisit = new Date(_dates[_dates.length - 1]).toLocaleDateString('ru-RU'));
			
			for(type in _visitTypes) {
				_visits.push(
					{
					    elem : 'row',
					    content : [
						    {
						    	elem : 'cell',
							    content : _visitTypes[type]
						    },
						    {
						    	elem : 'cell',
							    content : _visitsStat[type] ? _visitsStat[type] : _messages.noData
						    }
					    ]
					}
				)
			}

	var _paymentTable = [];
	var _referedAccTable = [];
	var _tableHeader = false;
	var _refNumber = 0;

	if (_custom && _custom.refPayment && _custom.referredAccounts) {
		function buildHeaderCells(obj, messages) {
			var _head = [];
			for(type in obj) {
				_head.push(
				    {
				    	elem : 'cell',
				    	mods : { header : true },
					    content : messages[type] ? messages[type] : type
				    }
				);
			}

			return _head;
		}

		function buildBodyCells(obj, source, noData) {
			var _cells = [];
			noData || (noData = 'Data unavailable');
			var _cell = {
		    	elem : 'cell',
			    content : noData
		    };
			for(type in obj) {
				_cells.push(atomizer(obj[type], source[type], _cell));
			}

			return _cells;
		}
		    

		function wrapInRow(cells) {
			return {
			    elem : 'row',
			    content : cells
			}
		}

		for (key in _custom.refPayment) {
			_custom.refPayment[key].forEach(function(item) {
				var _cells = [];
				var _head = [];

				if (!_tableHeader) {
					_head.push(buildHeaderCells(_refPaymentModel.fileds, _messages.refPayment));
					_head.push(buildHeaderCells({ payerId : null, payerMail : null }, _messages.refPayment));


					_paymentTable.push(wrapInRow(_head));
					_tableHeader = true;
				}

				_cells.push(buildBodyCells(_refPaymentModel.fileds, item, _messages.noData));
				_cells.push(buildBodyCells({ payerId : null, payerMail : null }, { payerId : key, payerMail : _custom.referredAccounts[key] }, _messages.noData));

				_paymentTable.push(wrapInRow(_cells));
			});

			_tableHeader = false;
		}

		for (key in _custom.referredAccounts) {
			var _cells = [];
			var _head = [];

			if (!_tableHeader) {
				_head.push(buildHeaderCells({ userId : null, userMail : null }, _messages));

				_referedAccTable.push(wrapInRow(_head));
				_tableHeader = true;
			}

			_cells.push(buildBodyCells({ payerId : null, payerMail : null }, { payerId : key, payerMail : _custom.referredAccounts[key] }, _messages.noData));

			_referedAccTable.push(wrapInRow(_cells));
			_refNumber += 1;
		}

		_tableHeader = false;
	}

	console.log(_user);


			return [
				{
				    block : 'column',
				    mods : { 'triple' : true },
				    content : [
						{
						    mix: [{ block : 'margins', mods : { none : true } }],

						    block : 'group-title',
						    content : _messages.profileStat
						}
				    ]
				},
				{
				    block : 'column',
				    mods : { 'double' : true },
				    content : [
						{
						    block : 'info-table',

						    content : [
								{
								    elem : 'row',
								    content : [
									    {
									    	elem : 'cell',
										    content : _messages.creationDate
									    },
									    buildBodyCells({ createdAt : { type : 'date-in-ms' }},  _user, _messages.noData)
								    ]
								},
								{
								    elem : 'row',
								    content : [
									    {
									    	elem : 'cell',
										    content : _messages.activeBonus
									    },
									    {
									    	elem : 'cell',
										    content : _custom.bonus ? _dir.bonus[_custom.bonus].description : _messages.noBonus
									    }
								    ]
								}
						    ]
						},
						{
						    block : 'column',
						    mods : { 'triple' : true },
						    content : [
								{
								    block : 'group-title',
								    content : _messages.visitorsStat
								},
								{
								    block : 'info-table',
								    content : _visits
								}
						    ]
						}
				    ]
				},
				!_custom.refPayment ? '' : [
					{
					    block : 'column',
					    mods : { 'triple' : true },
					    content : [
							{
							    block : 'group-title',
							    content : _messages && _messages.refPayment ? _messages.refPayment.refPayment : ''
							},
							{
							    block : 'info-table',

							    content : _paymentTable
							},
							{
							    block : 'group-title',
							    content : _messages && _messages.refPayment ? _messages.refPayment.reffered : ''
							},
							{
							    block : 'info-table',

							    content : _referedAccTable
							}
					    ]
					}
				],

				!_custom.referredAccounts ? '' : {
				    block : 'column',
				    mods : { 'triple' : true },
				    content : [
					    {
					    	block : 'margins',
						    mods : { top : true },
						    content : [
							    {
								    block : 'basic-text',
								    content : _messages && _messages.pay ? _messages.refPayment.refNumber : ''
								},
							    {
								    block : 'basic-text',
								    mods : { bold : true },
								    mix: { block : 'margins', mods : { left : true } },
								    content : _refNumber
								}
							]
						}
					]
				},

			    !this.ctx.clientData ? '' : { 
			    	block : 'data-provider',
			    	js : this.ctx.clientData
			    }
			]
		}
	),
	js()(true)
)